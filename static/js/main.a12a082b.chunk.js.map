{"version":3,"sources":["features/currentTodo.ts","types/Filters.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/SearchInput/SearchInput.tsx","components/Select/Select.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ActionType","Status","ActionTypes","actions","todo","type","SET","payload","REMOVE","currentTodoReducer","state","action","query","SET_QUERY","REMOVE_QUERY","status","SET_STATUS","initialState","All","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","dispatch","selected","id","className","classNames","completed","title","onClick","currentTodoActions","TodoList","filteredTodos","filters","normalizedQuery","toLowerCase","trim","includes","Active","Completed","getFilteredTodos","length","map","SearchInput","placeholder","value","onChange","e","target","filterActions","style","pointerEvents","options","label","Select","TodoFilter","Loader","TodoModal","useState","loading","setLoading","error","setError","user","setUser","useEffect","userId","catch","finally","href","email","name","App","todoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"6KAEKA,E,gEAAAA,K,sBAAAA,E,6BAAAA,M,KAYL,ICdYC,ECEPC,EFmBQC,EALG,SAACC,GAAD,MAAgC,CAC9CC,KAAML,EAAWM,IACjBC,QAASH,IAGED,EAPM,iBAAyB,CAAEE,KAAML,EAAWQ,SAyBhDC,EAbY,WAAiD,IAAhDC,EAA+C,uDAAhC,KAAMC,EAA0B,uCACzE,OAAQA,EAAON,MACb,KAAKL,EAAWM,IACd,OAAOK,EAAOJ,QAEhB,KAAKP,EAAWQ,OACd,OAAO,KAET,QACE,OAAOE,I,iBCnCDT,K,UAAAA,E,gBAAAA,E,uBAAAA,M,cCEPC,K,4BAAAA,E,kCAAAA,E,+BAAAA,M,KAoBL,IAcaC,EAdI,SAACS,GAAD,MAAoB,CACnCP,KAAMH,EAAYW,UAClBN,QAASK,IAYET,EATO,iBAAO,CACzBE,KAAMH,EAAYY,eAQPX,EALK,SAACY,GAAD,MAAqB,CACrCV,KAAMH,EAAYc,WAClBT,QAASQ,IAWLE,EAAwB,CAC5BL,MAAO,GACPG,OAAQd,EAAOiB,KAyBFC,EAtBO,WAA2C,IAA1CT,EAAyC,uDAAjCO,EAAcN,EAAmB,uCAC9D,OAAQA,EAAON,MACb,KAAKH,EAAYW,UACf,OAAO,2BACFH,GADL,IAEEE,MAAOD,EAAOJ,UAElB,KAAKL,EAAYY,aACf,OAAO,2BACFJ,GADL,IAEEE,MAAO,KAEX,KAAKV,EAAYc,WACf,OAAO,2BACFN,GADL,IAEEK,OAAQJ,EAAOJ,UAEnB,QACE,OAAOG,IC/DAP,EAFI,SAACiB,GAAD,MAAoB,CAAEf,KAAM,YAAaE,QAASa,IAgBpDC,EATM,WAAgD,IAA/CX,EAA8C,uDAA/B,GAAIC,EAA2B,uCAClE,MACO,cADCA,EAAON,KAEJM,EAAOJ,QAEPG,GCHPY,EAAcC,0BAAgB,CAClCC,YAAaf,EACbgB,OAAQN,EACRC,MAAOC,IAGIK,EAAeC,sBAC1BL,EACAM,8BAAoBC,0BAAgBC,O,0BCPtC,SAASC,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,I,QClBMC,EAAoCC,IACpCC,EAAkDC,I,wBCMlDC,EAA4B,SAAC,GAAc,IAAZ1C,EAAW,EAAXA,KACpC2C,EAAWL,IACTlB,EAAgBoB,GAAe,SAAClC,GAAD,OAAWA,KAA1Cc,YACFwB,GAAsB,OAAXxB,QAAW,IAAXA,OAAA,EAAAA,EAAayB,MAAO7C,EAAK6C,GAE1C,OACE,qBACE,UAAQ,OACRC,UAAWC,IAAW,CACpB,4BAA6BH,IAHjC,UAME,oBAAIE,UAAU,eAAd,SAA8B9C,EAAK6C,KAElC7C,EAAKgD,UACJ,oBAAIF,UAAU,eAAd,SACE,sBAAMA,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAIjB,oBAAIA,UAAU,iBAGhB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWC,IAAW,CACpB,mBAAoB/C,EAAKgD,UACzB,mBAAoBhD,EAAKgD,YAH7B,SAMGhD,EAAKiD,UAGV,oBAAIH,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACV7C,KAAK,SACLiD,QAAS,kBAAMP,EAASQ,EAA2BnD,KAJrD,SAME,sBAAM8C,UAAU,OAAhB,SACE,mBACEA,UAAWC,IAAW,MAAO,CAC3B,eAAgBH,EAChB,UAAWA,gBCzBdQ,EAAqB,WAChC,IAGMC,EA5BiB,SAACrC,EAAesC,GACvC,IAAID,EAAa,YAAOrC,GAChBL,EAAkB2C,EAAlB3C,OAAQH,EAAU8C,EAAV9C,MAmBhB,OAjBIA,IACF6C,EAAgBA,EAAchC,QAAO,SAACrB,GACpC,IAAMuD,EAAkB/C,EAAMgD,cAAcC,OAG5C,OAFwBzD,EAAKiD,MAAMO,cAEZE,SAASH,OAIhC5C,IAAWd,EAAO8D,SACpBN,EAAgBA,EAAchC,QAAO,SAACrB,GAAD,OAA6B,IAAnBA,EAAKgD,cAGlDrC,IAAWd,EAAO+D,YACpBP,EAAgBA,EAAchC,QAAO,SAACrB,GAAD,OAA6B,IAAnBA,EAAKgD,cAG/CK,EAOeQ,CAHJrB,GAAe,SAAClC,GAAD,OAAWA,KAApCU,MACWwB,GAAe,SAAClC,GAAD,OAAWA,KAArCe,QAIR,OACE,qCAC4B,IAAzBgC,EAAcS,QACb,mBAAGhB,UAAU,0BAAb,iEAKDO,EAAcS,OAAS,GACtB,wBAAOhB,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCACGO,EAAcU,KAAI,SAAC/D,GAAD,OACjB,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAK6C,gBC3DrBmB,EAAwB,WACnC,IAAMrB,EAAWL,IACTjB,EAAWmB,GAAe,SAAClC,GAAD,OAAWA,KAArCe,OAWR,OACE,oBAAGyB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACR7C,KAAK,OACL6C,UAAU,QACVmB,YAAY,YACZC,MAAO7C,EAAOb,MACd2D,SAlBe,SAACC,GACpB,IAAM5D,EAAQ4D,EAAEC,OAAOH,MAEvBvB,EAAS2B,EAAuB9D,OAiB9B,sBAAMsC,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdzB,EAAOb,OACN,sBAAMsC,UAAU,gBAAgByB,MAAO,CAAEC,cAAe,OAAxD,SACE,wBACE,UAAQ,oBACRvE,KAAK,SACL,aAAW,eACX6C,UAAU,SACVI,QAzBgB,WACxBP,EAAS2B,cCTPG,EAAU,CACd,CAAEP,MAAOrE,EAAOiB,IAAK4D,MAAO,OAC5B,CAAER,MAAOrE,EAAO8D,OAAQe,MAAO,UAC/B,CAAER,MAAOrE,EAAO+D,UAAWc,MAAO,cAGvBC,EAAmB,WAC9B,IAAMhC,EAAWL,IACTjB,EAAWmB,GAAe,SAAClC,GAAD,OAAWA,KAArCe,OAQR,OACE,mBAAGyB,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,wBACE,UAAQ,eACRoB,MAAO7C,EAAOV,OACdwD,SAZkB,SAACC,GACzB,IAAMzD,EAASyD,EAAEC,OAAOH,MAExBvB,EAAS2B,EAAwB3D,KAM7B,SAKG8D,EAAQV,KAAI,gBAAGG,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,MAAV,OACX,wBAAoBR,MAAOA,EAA3B,SACGQ,GADUR,aC1BZU,EAAuB,WAClC,OACE,uBAAM9B,UAAU,mBAAhB,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,QCNO+B,G,MAAmB,kBAC9B,qBAAK/B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCENgC,EAAsB,WACjC,IAAMnC,EAAWL,IACXtC,EAAOwC,GAAe,SAAClC,GAAD,OAAWA,EAAMc,eAC7C,EAA8B2D,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAsB,MAA9C,mBAAOK,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,qBAAU,WRSW,IAACC,EQRfvF,IAILiF,GAAW,GACXE,EAAS,ORGWI,EQDZvF,EAAKuF,ORC0B5D,EAAG,iBAAiB4D,KQAxDrD,KAAKmD,GACLG,MAAML,GACNM,SAAQ,WACPR,GAAW,SAEd,CAACjF,IAGF,sBAAK8C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdkC,EACC,cAAC,EAAD,IAEA,sBAAKlC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIY9C,QAJZ,IAIYA,OAJZ,EAIYA,EAAM6C,MAGlB,wBACE5C,KAAK,SACL6C,UAAU,SACV,UAAQ,cACR,aAAW,QACXI,QAAS,kBAAMP,EAASQ,WAI5B,sBAAKL,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACG9C,QADH,IACGA,OADH,EACGA,EAAMiD,QAGT,oBAAGH,UAAU,QAAQ,UAAQ,aAA7B,UACO,OAAJ9C,QAAI,IAAJA,KAAMgD,UACL,wBAAQF,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAEAoC,EACC,sBAAMpC,UAAU,kBAAhB,gCAEA,mBAAG4C,KAAI,wBAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,OAAzB,gBAAmCP,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMQ,oBC5D5CC,EAAgB,WAC3B,IAAMlD,EAAWL,IACTlB,EAAgBoB,GAAe,SAAClC,GAAD,OAAWA,KAA1Cc,YACR,EAA8B2D,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAG,qBAAU,WACRL,GAAW,GACXE,EAAS,MTCiBxD,EAAY,USEnCO,MAAK,SAAClB,GACL2B,EAASmD,EAAqB9E,OAE/BwE,MAAML,GACNM,SAAQ,WACPR,GAAW,QAEd,IAGD,qCACE,qBAAKnC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,QAAf,UACGkC,GAAW,cAAC,EAAD,IAEXE,GACC,mBAAGpC,UAAU,yBAAb,sCAKAkC,IAAYE,GAAS,cAAC,EAAD,cAM9B9D,GAAe,cAAC,EAAD,QCjDhB2E,EAAO,kBACX,cAAC,IAAD,CAAUzE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKN0E,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.a12a082b.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\nenum ActionType {\n  SET = 'currentTodo/SET',\n  REMOVE = 'currentTodo/REMOVE',\n}\n\ntype RemoveTodoAction = { type: ActionType.REMOVE };\n\ntype SetTodoAction = {\n  type: ActionType.SET;\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: ActionType.REMOVE });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: ActionType.SET,\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (state: State = null, action: Action): State => {\n  switch (action.type) {\n    case ActionType.SET:\n      return action.payload;\n\n    case ActionType.REMOVE:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport type Filters = {\n  status: Status;\n  query: string;\n};\n","import { Filters, Status } from '../types';\n\nenum ActionTypes {\n  SET_QUERY = 'filter/setQuery',\n  REMOVE_QUERY = 'filter/removeQuery',\n  SET_STATUS = 'filter/setStatus',\n}\n\ninterface Actions {\n  setQuery: {\n    type: ActionTypes.SET_QUERY;\n    payload: string;\n  };\n  removeQuery: {\n    type: ActionTypes.REMOVE_QUERY;\n  };\n  setStatus: {\n    type: ActionTypes.SET_STATUS;\n    payload: Status;\n  };\n}\n\nconst setQuery = (query: string) => ({\n  type: ActionTypes.SET_QUERY,\n  payload: query,\n});\n\nconst removeQuery = () => ({\n  type: ActionTypes.REMOVE_QUERY,\n});\n\nconst setStatus = (status: string) => ({\n  type: ActionTypes.SET_STATUS,\n  payload: status,\n});\n\nexport const actions = {\n  setQuery,\n  removeQuery,\n  setStatus,\n};\n\ntype Action = Actions[keyof Actions];\n\nconst initialState: Filters = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionTypes.SET_QUERY:\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case ActionTypes.REMOVE_QUERY:\n      return {\n        ...state,\n        query: '',\n      };\n    case ActionTypes.SET_STATUS:\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst setTodos = (todos: Todo[]) => ({ type: 'todos/SET', payload: todos });\n\nexport const actions = { setTodos };\n\ntype State = Todo[];\ntype Action = ReturnType<typeof setTodos>;\n\nconst todosReducer = (state: State = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","// prettier-ignore\nimport {\n  createStore, applyMiddleware, combineReducers, Store,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store: Store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n  const { currentTodo } = useAppSelector((state) => state);\n  const selected = currentTodo?.id === todo.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': selected,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n\n      {todo.completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('fas', {\n                'fa-eye-slash': selected,\n                'fa-eye': !selected,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { useAppSelector } from '../../app/hooks';\nimport { TodoItem } from '../TodoItem';\nimport { Filters, Status, Todo } from '../../types';\n\nconst getFilteredTodos = (todos: Todo[], filters: Filters) => {\n  let filteredTodos = [...todos];\n  const { status, query } = filters;\n\n  if (query) {\n    filteredTodos = filteredTodos.filter((todo) => {\n      const normalizedQuery = query.toLowerCase().trim();\n      const normalizedTitle = todo.title.toLowerCase();\n\n      return normalizedTitle.includes(normalizedQuery);\n    });\n  }\n\n  if (status === Status.Active) {\n    filteredTodos = filteredTodos.filter((todo) => todo.completed === false);\n  }\n\n  if (status === Status.Completed) {\n    filteredTodos = filteredTodos.filter((todo) => todo.completed === true);\n  }\n\n  return filteredTodos;\n};\n\nexport const TodoList: React.FC = () => {\n  const { todos } = useAppSelector((state) => state);\n  const { filter } = useAppSelector((state) => state);\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  return (\n    <>\n      {filteredTodos.length === 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {filteredTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map((todo) => (\n              <TodoItem key={todo.id} todo={todo} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { actions as filterActions } from '../../features/filter';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const SearchInput: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { filter } = useAppSelector((state) => state);\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n\n    dispatch(filterActions.setQuery(query));\n  };\n\n  const handleClearSearch = () => {\n    dispatch(filterActions.removeQuery());\n  };\n\n  return (\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filter.query}\n        onChange={handleSearch}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {filter.query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            aria-label=\"clear search\"\n            className=\"delete\"\n            onClick={handleClearSearch}\n          />\n        </span>\n      )}\n    </p>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nconst options = [\n  { value: Status.All, label: 'All' },\n  { value: Status.Active, label: 'Active' },\n  { value: Status.Completed, label: 'Completed' },\n];\n\nexport const Select: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { filter } = useAppSelector((state) => state);\n\n  const onSelectionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const status = e.target.value as Status;\n\n    dispatch(filterActions.setStatus(status));\n  };\n\n  return (\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter.status}\n          onChange={onSelectionChange}\n        >\n          {options.map(({ value, label }) => (\n            <option key={value} value={value}>\n              {label}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n  );\n};\n","import React from 'react';\nimport { SearchInput } from '../SearchInput';\nimport { Select } from '../Select';\n\nexport const TodoFilter: React.FC = () => {\n  return (\n    <form className=\"field has-addons\">\n      <Select />\n\n      <SearchInput />\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector((state) => state.currentTodo);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!todo) {\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {error ? (\n                <span className=\"has-text-danger\">Error loading user</span>\n              ) : (\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { actions as todoActions } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { currentTodo } = useAppSelector((state) => state);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    getTodos()\n      .then((todos) => {\n        dispatch(todoActions.setTodos(todos));\n      })\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {error && (\n                <p className=\"notification is-danger\">\n                  Something went wrong...\n                </p>\n              )}\n\n              {!loading && !error && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}